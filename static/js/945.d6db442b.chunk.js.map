{"version":3,"file":"static/js/945.d6db442b.chunk.js","mappings":"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","sources":["webpack://learning-english-app/./src/UI/Card.module.css?b1e4","UI/Card.js","webpack://learning-english-app/./src/UI/Input.module.css?95ce","UI/Input.js","webpack://learning-english-app/./src/UI/Modal.module.css?c7c1","UI/Modal.js","hooks/useInput.js","webpack://learning-english-app/./src/pages/SignUp.module.css?3860","pages/SignUp.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__Zi619\"};","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  const cardClass = classes.card;\r\n  return (\r\n    <div\r\n    onClick={props.onClick}\r\n      className={\r\n        props.className ? `${cardClass} ${props.className}` : cardClass\r\n      }\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"Input_form-control__4lNCk\",\"invalid\":\"Input_invalid__ARa-D\",\"error\":\"Input_error__NdRaW\"};","import classes from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <div className={classes[\"form-control\"]}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        className={props.hasError ? classes.invalid : null}\r\n        value={props.inputValue}\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n      />\r\n      {props.showError && props.hasError && (\r\n        <p className={classes.error}>{props.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__qaofM\",\"overlay\":\"Modal_overlay__lKJ-T\",\"header\":\"Modal_header__vSJCg\",\"content\":\"Modal_content__tGlgj\",\"footer\":\"Modal_footer__+ejtP\",\"action\":\"Modal_action__ioezI\",\"confirm-btn\":\"Modal_confirm-btn__Sgmni\",\"action-btn\":\"Modal_action-btn__W2Yo6\"};","import ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\n\r\nconst Overlay = (props) => {\r\n  return (\r\n    <div className={classes.overlay}>\r\n      <header className={classes.header}>{props.title}</header>\r\n      <div className={classes.content}>{props.message}</div>\r\n      <footer className={classes.footer}>\r\n        <div className={classes.action}>\r\n          {props.secondOnClick && (\r\n            <button\r\n              className={classes[\"action-btn\"]}\r\n              onClick={props.secondOnClick}\r\n            >\r\n              {props.secondTextButton}\r\n            </button>\r\n          )}\r\n          <button className={classes[\"confirm-btn\"]} onClick={props.onClick}>\r\n            {props.firstTextButton ? props.firstTextButton : \"OK\"}\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClick} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Overlay\r\n          onClick={props.onClick}\r\n          title={props.title}\r\n          message={props.message}\r\n          secondOnClick={props.secondOnClick}\r\n          secondTextButton={props.secondTextButton}\r\n          firstTextButton={props.firstTextButton}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\n\r\nconst useInput = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const hasError = !isValid && isTouched;\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    const currentValue = event.target.value;\r\n    setIsTouched(false);\r\n    setInputValue(currentValue);\r\n      props.secondCondition && props.secondCondition(currentValue);\r\n    if (props.condition(currentValue)) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n    setShowError(true);\r\n  };\r\n  const resetInput = () => {\r\n    setInputValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n  const turnOnIsTouched = () => {\r\n    setIsTouched(true);\r\n  };\r\n  const changeIsValid = (val) => {\r\n    setIsValid(val);\r\n  };\r\n  const changeShowError = (val) => {\r\n    setShowError(val);\r\n  };\r\n  return {\r\n    inputValue,\r\n    isValid,\r\n    hasError,\r\n    showError,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    resetInput,\r\n    turnOnIsTouched,\r\n    changeIsValid,\r\n    changeShowError,\r\n  };\r\n};\r\nexport default useInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"signing-page\":\"SignUp_signing-page__k72wM\",\"sign-up\":\"SignUp_sign-up__N6Vg2\",\"title\":\"SignUp_title__Y7NXw\",\"submit\":\"SignUp_submit__gKcEn\",\"toggleForm\":\"SignUp_toggleForm__mnblO\",\"toggleLink\":\"SignUp_toggleLink__H9Noo\"};","import { Link, useHistory } from \"react-router-dom\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nimport useInput from \"../hooks/useInput\";\r\nimport AuthContext from \"../store/Auth-context\";\r\nimport Card from \"../UI/Card\";\r\nimport Input from \"../UI/Input\";\r\nimport classes from \"./SignUp.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nconst SignUpPage = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [notification, setNotification] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const emailCondition = (val) => {\r\n    return val.includes(\"@\");\r\n  };\r\n  const passwordCondition = (val) => {\r\n    return val.trim().length > 6;\r\n  };\r\n  const duplicateCondition = (val) => {\r\n    return val === password;\r\n  };\r\n\r\n  const {\r\n    inputValue: email,\r\n    isValid: emailIsValid,\r\n    hasError: emailHasError,\r\n    showError,\r\n    changeShowError,\r\n    inputChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    resetInput: resetEmailInput,\r\n    turnOnIsTouched: turnOnEmailIsTouched,\r\n  } = useInput({ condition: emailCondition });\r\n\r\n  const {\r\n    inputValue: duplicate,\r\n    isValid: duplicateIsValid,\r\n    hasError: duplicateHasError,\r\n    inputChangeHandler: duplicateChangeHandler,\r\n    inputBlurHandler: duplicateBlurHandler,\r\n    resetInput: resetDuplicateInput,\r\n    turnOnIsTouched: turnOnDuplicateIsTouched,\r\n    changeIsValid: changeDuplicateIsValid,\r\n  } = useInput({ condition: duplicateCondition });\r\n\r\n  const passSecondCondition = (val, x = duplicate) => {\r\n    if (val !== x) {\r\n      changeDuplicateIsValid(false);\r\n      changeShowError(true);\r\n    } else {\r\n      changeDuplicateIsValid(true);\r\n      changeShowError(true);\r\n    }\r\n  };\r\n\r\n  const {\r\n    inputValue: password,\r\n    isValid: passwordIsValid,\r\n    hasError: passwordHasError,\r\n    inputChangeHandler: passwordChangeHandler,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    resetInput: resetPasswordInput,\r\n    turnOnIsTouched: turnOnPasswordIsTouched,\r\n  } = useInput({\r\n    condition: passwordCondition,\r\n    secondCondition: passSecondCondition,\r\n  });\r\n\r\n  const formIsValid =\r\n     emailIsValid && passwordIsValid && duplicateIsValid;\r\n\r\n  const sendRequest = async () => {\r\n    setNotification(false);\r\n    let apiKey = \"AIzaSyD0iWDZ1ABlsuooDbitUTmj93_GWg8CRyA\";\r\n    const response = await fetch(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: false,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (data[\"error\"] && data[\"error\"][\"message\"]) {\r\n        setNotification(true);\r\n        setErrorMessage(data.error.message);\r\n        throw new Error(data.error.message)\r\n    } else {\r\n      authCtx.signUp(data.idToken,data.email);\r\n    }\r\n  };\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid) {\r\n      turnOnEmailIsTouched();\r\n      turnOnPasswordIsTouched();\r\n      turnOnDuplicateIsTouched();\r\n      changeShowError(true);\r\n      return;\r\n    } else {\r\n      changeShowError(false);\r\n    }\r\n    await sendRequest();\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n    resetDuplicateInput();\r\n    history.push('/');\r\n  };\r\n\r\n  const closeModalHandler = () =>{\r\n    setNotification(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes[\"signing-page\"]}>\r\n      <Card className={classes[\"sign-up\"]}>\r\n        <h2 className={classes.title}>Sign-Up</h2>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <Input\r\n            id={email}\r\n            label=\"E-mail\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={emailChangeHandler}\r\n            onBlur={emailBlurHandler}\r\n            showError={showError}\r\n            hasError={emailHasError}\r\n            error=\"Your email address is not valid!\"\r\n          />\r\n          <Input\r\n            id={password}\r\n            label=\"Password (7 characters minimum)\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={passwordBlurHandler}\r\n            showError={showError}\r\n            hasError={passwordHasError}\r\n            error=\"Your password must have at least 7 characters!\"\r\n          />\r\n          <Input\r\n            id={duplicate}\r\n            label=\"Repeat your password\"\r\n            type=\"password\"\r\n            value={duplicate}\r\n            onChange={duplicateChangeHandler}\r\n            onBlur={duplicateBlurHandler}\r\n            showError={showError}\r\n            hasError={duplicateHasError}\r\n            error=\"Your passwords are different!\"\r\n          />\r\n          <button className={classes.submit}>Sign Up</button>\r\n        </form>\r\n      </Card>\r\n      <div className={classes.toggleForm}>\r\n        <fieldset>\r\n          <legend>Do you already have an account?</legend>\r\n        </fieldset>\r\n        <Link className={classes.toggleLink} to='/sign-in' >Loging on your account</Link>\r\n      </div>\r\n      {notification && <Modal title='Error' message={errorMessage} onClick={closeModalHandler} />}\r\n    </div>\r\n  );\r\n};\r\nexport default SignUpPage;\r\n"],"names":["props","cardClass","classes","onClick","className","children","htmlFor","id","label","type","hasError","value","inputValue","onChange","onBlur","showError","error","Backdrop","Overlay","title","message","secondOnClick","secondTextButton","firstTextButton","ReactDOM","document","getElementById","useState","setInputValue","isValid","setIsValid","isTouched","setIsTouched","setShowError","inputChangeHandler","event","currentValue","target","secondCondition","condition","inputBlurHandler","resetInput","turnOnIsTouched","changeIsValid","val","changeShowError","authCtx","useContext","AuthContext","history","useHistory","notification","setNotification","errorMessage","setErrorMessage","useInput","includes","email","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","turnOnEmailIsTouched","password","duplicate","duplicateIsValid","duplicateHasError","duplicateChangeHandler","duplicateBlurHandler","resetDuplicateInput","turnOnDuplicateIsTouched","changeDuplicateIsValid","trim","length","x","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPasswordInput","turnOnPasswordIsTouched","formIsValid","sendRequest","fetch","method","body","JSON","stringify","returnSecureToken","headers","response","json","data","Error","signUp","idToken","formSubmitHandler","preventDefault","push","Card","onSubmit","Input","to","Modal"],"sourceRoot":""}