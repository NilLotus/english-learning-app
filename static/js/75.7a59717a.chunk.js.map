{"version":3,"file":"static/js/75.7a59717a.chunk.js","mappings":"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","sources":["webpack://learning-english-app/./src/UI/Tooltip.module.css?40f3","UI/Tooltip.js","webpack://learning-english-app/./src/components/LevelList.module.css?539d","components/LevelList.js","webpack://learning-english-app/./src/components/Vocabulary.module.css?478e","components/Vocabulary.js","webpack://learning-english-app/./src/components/VocabList.module.css?5da4","components/VocabList.js","webpack://learning-english-app/./src/components/LearnedWords.module.css?1473","components/LearnedWords.js","webpack://learning-english-app/./src/components/DifficultWords.module.css?64ef","components/DifficultWords.js","webpack://learning-english-app/./src/components/Flashcards.module.css?428a","components/Flashcards.js","webpack://learning-english-app/./src/UI/Drawer.module.css?3ba3","UI/Drawer.js","webpack://learning-english-app/./src/components/Guide.module.css?e03f","components/Guide.js","utils/PrivertRoute.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"Tooltip_tooltip__JCYZU\",\"tooltip-text\":\"Tooltip_tooltip-text__ERhzj\"};","import classes from \"./Tooltip.module.css\";\r\n\r\nconst Tooltip = (props) => {\r\n  return (\r\n    <div className={`${classes.tooltip} ${props.className && props.className}`} onClick={props.onClick}>\r\n      {props.children}\r\n      <div className={classes[\"tooltip-text\"]}>{props.title}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Tooltip;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"level\":\"LevelList_level__QMKDN\",\"title\":\"LevelList_title__bqmM2\",\"number\":\"LevelList_number__DBz5V\"};","import { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiX } from \"react-icons/hi\";\r\nimport { HiOutlineCheck } from \"react-icons/hi\";\r\n\r\nimport Guide from \"./Guide\";\r\nimport classes from \"./LevelList.module.css\";\r\n\r\nconst LevelList = () => {\r\n  const studyLevels = [0, 1, 2, 3, 4];\r\n  const items = useSelector((state) => state.items.words);\r\n\r\n  const content = studyLevels.map((i) => {\r\n    const quantity = items.filter(\r\n      (item) => Math.floor(item.level) === i\r\n    ).length;\r\n    return (\r\n      <Link\r\n        className={classes.level}\r\n        to={`/flashcards/practice/level-${i + 1}`}\r\n        key={i}\r\n      >\r\n        <div className={classes.title}>{`Level ${i + 1}`}</div>\r\n        <div className={classes.quantity}>\r\n          ( <span className={classes.number}>{quantity}</span> words )\r\n        </div>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  const drawerContent = (\r\n    <ul>\r\n      <li>\r\n        This tab is the main component of flashcards. According to your review,\r\n        all flashcard items will fall into one of these five categories.\r\n      </li>\r\n      <li>\r\n        When you add an item to a flashcard (via the dictionary page), it is\r\n        automatically added to level one.\r\n      </li>\r\n      <li>\r\n        You should start reviewing that word from level one. If you can't\r\n        remember the meaning, just click on button <HiX />, and if you know the\r\n        meaning, click on button <HiOutlineCheck />.\r\n      </li>\r\n      <li>If you learn a word and clik on <HiOutlineCheck/> button for two different times, it will advance to the next level</li>\r\n      <li>If you can't remember the meaning and click on <HiX/> button, the word will fall back to previous level. (This is not the case with level one)</li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {content}\r\n      <Guide\r\n        drawerHeader=\"How to work with flashcards\"\r\n        drawerContent={drawerContent}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default LevelList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Vocabulary_container__LhuxJ\",\"title\":\"Vocabulary_title__rBN43\",\"word\":\"Vocabulary_word__g9AIQ\",\"update-note\":\"Vocabulary_update-note__5KlYl\",\"add-btn\":\"Vocabulary_add-btn__q0LSh\",\"remove-btn\":\"Vocabulary_remove-btn__DzjDN\",\"icon\":\"Vocabulary_icon__cKXMx\",\"confirm-btn\":\"Vocabulary_confirm-btn__7Lzb6\",\"input\":\"Vocabulary_input__36p4H\",\"active\":\"Vocabulary_active__i8Osv\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  deleteFlashcardsItem,\r\n  updateFlashcardsData,\r\n} from \"../app/flashcardsData-actions\";\r\nimport { flashcardsActions } from \"../app/flashcardsItems-slice\";\r\nimport Tooltip from \"../UI/Tooltip\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { MdCheck } from \"react-icons/md\";\r\nimport classes from \"./Vocabulary.module.css\";\r\n\r\nconst Vocabulary = (props) => {\r\n  const [isPicked, setIsPicked] = useState(false);\r\n  const [note, setNote] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setNote(event.target.value);\r\n  };\r\n\r\n  const addNoteHandler = () => {\r\n    if (isPicked) {\r\n      setIsPicked(false);\r\n      const newItem = { ...props.item };\r\n      newItem.note = note;\r\n      dispatch(updateFlashcardsData(newItem));\r\n      dispatch(flashcardsActions.updateNote(newItem));\r\n      setNote(\"\");\r\n    } else {\r\n      setIsPicked(true);\r\n    }\r\n  };\r\n\r\n  const removeWordHandler = () => {\r\n    dispatch(flashcardsActions.remove(\"sorry\"));\r\n    dispatch(deleteFlashcardsItem(props.item));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.title}>\r\n        <p className={classes.word}>{props.item.word} </p>\r\n        {props.item.note && <i>( {props.item.note} )</i>}\r\n      </div>\r\n      <div className={classes[\"update-note\"]}>\r\n        <input\r\n          onChange={inputChangeHandler}\r\n          value={note}\r\n          className={`${classes.input} ${isPicked ? classes.active : \"\"}`}\r\n        />\r\n        <button\r\n          onClick={addNoteHandler}\r\n          className={`${classes[\"add-btn\"]} ${\r\n            isPicked ? classes[\"confirm-btn\"] : \"\"\r\n          }`}\r\n        >\r\n          {isPicked ? (\r\n            <Tooltip className={classes.icon} title=\"Confirm\">\r\n              <MdCheck />\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip className={classes.icon} title=\"Add Your Note\">\r\n              <AiOutlineEdit />\r\n            </Tooltip>\r\n          )}\r\n        </button>\r\n        <button onClick={removeWordHandler} className={classes[\"remove-btn\"]}>\r\n          <Tooltip className={classes.icon} title=\"Remove From List\">\r\n            <RiDeleteBin6Line />\r\n          </Tooltip>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Vocabulary;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"VocabList_list__gNauq\",\"empty\":\"VocabList_empty__iv+C3\"};","import { useSelector } from \"react-redux\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { MdCheck } from \"react-icons/md\";\r\n\r\nimport Vocabulary from \"./Vocabulary\";\r\nimport Guide from \"./Guide\";\r\nimport classes from \"./VocabList.module.css\";\r\n\r\nconst VocabularyList = () => {\r\n  const items = useSelector((state) => state.items.words);\r\n  let vocabulary = (\r\n    <ul className={classes.list}>\r\n      {items.map((element) => {\r\n        return (\r\n          <li key={element.word}>\r\n            <Vocabulary item={element} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n  const drawerContent = (\r\n    <ul>\r\n      <li>\r\n        If you have already added some words to your flashcard (via the\r\n        dictionary page), you can see your entire list in <b>Vocabulary List</b>{\" \"}\r\n        tab.\r\n      </li>\r\n      <li>\r\n        To delete an item from your list you can click on <RiDeleteBin6Line />{\" \"}\r\n        button.\r\n      </li>\r\n      <li>\r\n        To add a note or meaning in your own language to an item, click the{\" \"}\r\n        <AiOutlineEdit /> button, then enter your note in the input, then\r\n        press the <MdCheck /> button, and your note will appear in front of the\r\n        word.\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Guide drawerHeader=\"Vocabulary List\" drawerContent={drawerContent} />\r\n      {items.length > 0 ? (\r\n        vocabulary\r\n      ) : (\r\n        <div className={classes.empty}>\r\n          <i>You have not added any vocabulary to flashcards!</i>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default VocabularyList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"learned-words-content\":\"LearnedWords_learned-words-content__8gDLK\",\"word-box\":\"LearnedWords_word-box__Xyx+s\",\"empty\":\"LearnedWords_empty__losGB\"};","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Guide from \"./Guide\";\r\nimport classes from \"./LearnedWords.module.css\";\r\n\r\nconst LearnedWords = () => {\r\n  const items = useSelector((state) => state.items.words);\r\n  const newItems = items.filter((item) => item.level > 4);\r\n  const history = useHistory();\r\n\r\n  const linkToDictionaryHandler = (word) => {\r\n    history.push(`/dictionary/${word}`);\r\n  };\r\n\r\n  const hasContent = newItems.map((i) => {\r\n    return (\r\n      <li\r\n        className={classes[\"word-box\"]}\r\n        key={i.word}\r\n        onClick={() => linkToDictionaryHandler(i.word)}\r\n      >\r\n        <p>{i.word}</p>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const empty = (\r\n    <div className={classes.empty}>\r\n      <i>\r\n        There is no word to complete all of the levels, so this tab is empty.\r\n      </i>\r\n    </div>\r\n  );\r\n\r\n  const drawerContent = (\r\n    <>\r\n      This page contains a list of words that you have recently learned. Items\r\n      above level 5 will be placed here!\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Guide drawerHeader=\"Learned Words\" drawerContent={drawerContent} />\r\n      {newItems.length > 0 ? (\r\n        <ul className={classes[\"learned-words-content\"]}>{hasContent}</ul>\r\n      ) : (\r\n        empty\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default LearnedWords;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"difficult-words-content\":\"DifficultWords_difficult-words-content__sBJGG\",\"word-box\":\"DifficultWords_word-box__i9nrN\",\"empty\":\"DifficultWords_empty__gRMK1\"};","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Guide from \"./Guide\";\r\nimport classes from \"./DifficultWords.module.css\";\r\n\r\nconst DifficultWords = () => {\r\n  const items = useSelector((state) => state.items.words);\r\n  const newItems = items.filter((item) => item.wrong > 3);\r\n  const history = useHistory();\r\n\r\n  const linkToDictionaryHandler = (word) => {\r\n    history.push(`/dictionary/${word}`);\r\n  };\r\n\r\n  const hasContent = newItems.map((i) => {\r\n    return (\r\n      <li\r\n        className={classes[\"word-box\"]}\r\n        key={i.word}\r\n        onClick={() => linkToDictionaryHandler(i.word)}\r\n      >\r\n        <p>{i.word}</p>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const empty = (\r\n    <div className={classes.empty}>\r\n      <i>\r\n        There is no word that you have difficulty in memorizing. (Word with more\r\n        than 5 times saying wrong!)\r\n      </i>\r\n    </div>\r\n  );\r\n\r\n  const drawerContent = (\r\n    <>\r\n        This page contains a list of elusive words that you can't recall or\r\n        guess the meaning of after three attempts.\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Guide drawerHeader=\"Difficult Words\" drawerContent={drawerContent} />\r\n      {newItems.length > 0 ? (\r\n        <ul className={classes[\"difficult-words-content\"]}>{hasContent}</ul>\r\n      ) : (\r\n        empty\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DifficultWords;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Flashcards\":\"Flashcards_Flashcards__ZiFVV\",\"title\":\"Flashcards_title__CBzSW\",\"flashcards_actions\":\"Flashcards_flashcards_actions__6GFgO\",\"link\":\"Flashcards_link__xNDWw\",\"active-link\":\"Flashcards_active-link__fMFFV\",\"empty\":\"Flashcards_empty__YOdU1\",\"content\":\"Flashcards_content__8ue3g\"};","import { useState, useEffect } from \"react\";\r\nimport { NavLink, Switch, useLocation } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"../utils/PrivertRoute\";\r\nimport LevelList from \"./LevelList\";\r\nimport VocabularyList from \"./VocabList\";\r\nimport LearnedWords from \"./LearnedWords\";\r\nimport DifficultWords from \"./DifficultWords\";\r\nimport Guide from \"./Guide\";\r\nimport classes from \"./Flashcards.module.css\";\r\n\r\nconst Flashcards = () => {\r\n  const [hasContent, setHasContent] = useState(\"\");\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (location.pathname === \"/flashcards\") {\r\n      setHasContent(false);\r\n    } else setHasContent(true);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className={classes.Flashcards}>\r\n      <div className={classes[\"flashcards_actions\"]}>\r\n        <NavLink\r\n          activeClassName={classes[\"active-link\"]}\r\n          className={classes.link}\r\n          to=\"/flashcards/vocabulary-list\"\r\n        >\r\n          Vocabulary List\r\n        </NavLink>\r\n        <NavLink\r\n          activeClassName={classes[\"active-link\"]}\r\n          className={classes.link}\r\n          to=\"/flashcards/practice\"\r\n        >\r\n          Let's Study\r\n        </NavLink>\r\n        <NavLink\r\n          activeClassName={classes[\"active-link\"]}\r\n          className={classes.link}\r\n          to=\"/flashcards/learned-words\"\r\n        >\r\n          Learned Words\r\n        </NavLink>\r\n        <NavLink\r\n          activeClassName={classes[\"active-link\"]}\r\n          className={classes.link}\r\n          to=\"/flashcards/difficult-words\"\r\n        >\r\n          Difficult Words\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {!hasContent && (\r\n          <div className={classes.empty}>\r\n            <i>(Choose your tab to see content.)</i>\r\n          </div>\r\n        )}\r\n        <Switch>\r\n          <PrivateRoute path=\"/flashcards/vocabulary-list\">\r\n            <VocabularyList />\r\n          </PrivateRoute>\r\n        </Switch>\r\n        <Switch>\r\n          <PrivateRoute path=\"/flashcards/practice\">\r\n            <LevelList />\r\n          </PrivateRoute>\r\n        </Switch>\r\n        <Switch>\r\n          <PrivateRoute path=\"/flashcards/learned-words\">\r\n            <LearnedWords />\r\n          </PrivateRoute>\r\n        </Switch>\r\n        <Switch>\r\n          <PrivateRoute path=\"/flashcards/difficult-words\">\r\n            <DifficultWords />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Flashcards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Drawer_backdrop__FQ5kq\",\"drawer\":\"Drawer_drawer__0INmv\",\"header\":\"Drawer_header__BJC6j\",\"close-btn\":\"Drawer_close-btn__fyk3f\",\"content\":\"Drawer_content__eRRMc\",\"fade-enter\":\"Drawer_fade-enter__tiHy+\",\"fade-enter-done\":\"Drawer_fade-enter-done__nVo8H\",\"fade-exit\":\"Drawer_fade-exit__vv10y\",\"fade-exit-done\":\"Drawer_fade-exit-done__ZYWEj\"};","import ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\n\r\nimport classes from \"./Drawer.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\n\r\nconst Overlay = (props) => {\r\n  return (\r\n    <div className={classes.drawer}>\r\n      <div className={classes.header}>\r\n        <div>{props.header}</div>\r\n        <button className={classes[\"close-btn\"]} onClick={props.onClick}>\r\n          <IoCloseOutline />\r\n        </button>\r\n      </div>\r\n      <div className={classes.content}>{props.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Drawer = (props) => {\r\n  return (\r\n    <>\r\n      {props.show &&\r\n        ReactDOM.createPortal(\r\n          <Backdrop onClick={props.onClick} />,\r\n          document.getElementById(\"backdrop-root\")\r\n        )}\r\n      {ReactDOM.createPortal(\r\n        <CSSTransition\r\n          in={props.show}\r\n          timeout={300}\r\n          unmountOnExit\r\n          classNames={{\r\n            enter: `${classes[\"fade-enter\"]}`,\r\n            enterDone: `${classes[\"fade-enter-done\"]}`,\r\n            exit: `${classes[\"fade-exit\"]}`,\r\n            exitDone: `${classes[\"fade-exit-done\"]}`,\r\n          }}\r\n        >\r\n          <Overlay\r\n            onClick={props.onClick}\r\n            header={props.header}\r\n            content={props.content}\r\n          />\r\n        </CSSTransition>,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Drawer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"help\":\"Guide_help__y30q4\",\"helpBuzz\":\"Guide_helpBuzz__RYpKq\",\"alert-enter\":\"Guide_alert-enter__BfyT4\",\"alert-enter-active\":\"Guide_alert-enter-active__VPDdL\",\"alert-exit\":\"Guide_alert-exit__-i7+C\",\"alert-exit-active\":\"Guide_alert-exit-active__kXlPs\"};","import { useState } from \"react\";\r\nimport { IoIosHelpBuoy } from \"react-icons/io\";\r\n\r\nimport Drawer from \"../UI/Drawer\";\r\nimport classes from \"./Guide.module.css\";\r\n\r\nconst Guide = (props) => {\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n\r\n  const toggleDrawer = () => {\r\n    setShowDrawer((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        show={showDrawer}\r\n        onClick={toggleDrawer}\r\n        header={props.drawerHeader}\r\n        content={props.drawerContent}\r\n      />\r\n      <IoIosHelpBuoy className={classes.help} onClick={toggleDrawer} />\r\n    </>\r\n  );\r\n};\r\nexport default Guide;\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../store/Auth-context\";\r\n\r\nconst PrivateRoute = ({ children: Component, path, ...rest }) => {\r\n  const AuthCtx = useContext(AuthContext);\r\n  const checked = AuthCtx.check();\r\n\r\n  return checked ? (\r\n    <Route {...rest} render={() => Component} />\r\n  ) : (\r\n    <Redirect to={`/sign-in?path=${path}`} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"names":["props","className","classes","onClick","children","title","items","useSelector","state","words","content","map","i","quantity","filter","item","Math","floor","level","length","to","drawerContent","Guide","drawerHeader","useState","isPicked","setIsPicked","note","setNote","dispatch","useDispatch","word","onChange","event","preventDefault","target","value","newItem","updateFlashcardsData","flashcardsActions","Tooltip","deleteFlashcardsItem","vocabulary","element","newItems","history","useHistory","hasContent","push","empty","wrong","setHasContent","location","useLocation","useEffect","pathname","activeClassName","path","Backdrop","Overlay","header","show","ReactDOM","document","getElementById","CSSTransition","in","timeout","unmountOnExit","classNames","enter","enterDone","exit","exitDone","showDrawer","setShowDrawer","toggleDrawer","prevState","Component","rest","useContext","AuthContext","check","render"],"sourceRoot":""}